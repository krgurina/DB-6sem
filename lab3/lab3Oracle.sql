CREATE TABLE ROOMS (
    room_number NUMBER(10),
    room_name NVARCHAR2(50) NOT NULL,
    parent_room_number NUMBER(10) NOT NULL,
    room_capacity NUMBER(10) NOT NULL,
    room_daily_price FLOAT(10) NOT NULL,
    room_description NVARCHAR2(200) NOT NULL,
    CONSTRAINT room_pk PRIMARY KEY (room_number)
);

delete from rooms;
ALTER TABLE ROOMS
ADD parent_room_number INT;
ALTER TABLE ROOMS
MODIFY parent_room_number NUMBER(10);

ALTER TABLE ROOMS
MODIFY room_number NUMBER(10) NOT NULL;

-- Убираем автогенерацию
ALTER TABLE ROOMS
MODIFY room_number GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1);

-- Удаляем идентификацию
ALTER TABLE ROOMS
MODIFY room_number NUMBER(10);

SELECT * FROM rooms


INSERT INTO ROOMS (room_number, room_name, room_capacity, room_daily_price, room_description, parent_room_number) 
VALUES (1, '1 этаж', 0, 0, 'Корневая комната', 0 );

INSERT INTO ROOMS (room_number, room_name, room_capacity, room_daily_price, room_description, parent_room_number) 
VALUES (11, 'Северное крыло', 0, 0, 'Стандартные комнаты', 1);

INSERT INTO ROOMS (room_number, room_name, room_capacity, room_daily_price, room_description, parent_room_number) 
VALUES (21, 'Южное крыло', 0, 0, 'Стандартные комнаты', 1);

INSERT INTO ROOMS (room_number, room_name, room_capacity, room_daily_price, room_description, parent_room_number) 
VALUES (111, '101', 2, 100, 'Standard', 11);

INSERT INTO ROOMS (room_number, room_name, room_capacity, room_daily_price, room_description, parent_room_number) 
VALUES (112, '112', 3, 150, 'Standard', 11);

INSERT INTO ROOMS (room_number, room_name, room_capacity, room_daily_price, room_description, parent_room_number) 
VALUES (11201, '112A', 3, 150, 'Standard', 112);

INSERT INTO ROOMS (room_number, room_name, room_capacity, room_daily_price, room_description, parent_room_number) 
VALUES (11202, '112B', 3, 150, 'Standard', 112);

INSERT INTO ROOMS (room_number, room_name, room_capacity, room_daily_price, room_description, parent_room_number) 
VALUES (11203, '11203', 4, 208, 'Standard++', 11201);

INSERT INTO ROOMS (room_number, room_name, room_capacity, room_daily_price, room_description, parent_room_number) 
VALUES (40304, '404Ab', 4, 208, 'Standard++', 11201);
commit;
------------------------------------------------------------------
select * from rooms;
SELECT room_number, room_name, LEVEL
FROM ROOMS
START WITH room_number = 11
CONNECT BY PRIOR room_number = parent_room_number;
-------------------------------------------------------------------
--2
--------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE GetSubordinates (p_id IN NUMBER) AS
    BEGIN
      FOR rec IN (
        SELECT room_number, room_name, LEVEL as hierarchy_level
        FROM ROOMS
        WHERE room_number != p_id
        START WITH room_number = p_id
         CONNECT BY PRIOR room_number = parent_room_number
    ) LOOP
            DBMS_OUTPUT.PUT_LINE('ID: ' || rec.room_number || ', room_name: ' || rec.room_name || ', Hierarchy Level: ' || rec.hierarchy_level);
        END LOOP;
    END GetSubordinates; 

exec GetSubordinates(11);

--------------------------------------------------------------------------------
--3
--------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE AddRoom (
    p_room_number IN ROOMS.room_number%TYPE,
    p_parent_room_number IN ROOMS.parent_room_number%TYPE,
    p_room_name IN ROOMS.room_name%TYPE,
    p_room_capacity IN ROOMS.room_capacity%TYPE,
    p_room_daily_price IN ROOMS.room_daily_price%TYPE,
    p_room_description IN ROOMS.room_description%TYPE
) AS
BEGIN
    INSERT INTO ROOMS (
        room_number,
        parent_room_number,
        room_name,
        room_capacity,
        room_daily_price,
        room_description
    ) VALUES (
        p_room_number,
        p_parent_room_number,
        p_room_name,
        p_room_capacity,
        p_room_daily_price,
        p_room_description
    );

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error Code: ' || SQLCODE || ', Error Message: ' || SQLERRM);

        ROLLBACK;
        RAISE;
END AddRoom;


--------------------------------------------------------------------------------
DECLARE
    v_room_number NUMBER(10):= 11603;
    v_parent_room_number NUMBER(10):= 116;
    v_room_name NVARCHAR2(50) := '11603';
    v_room_capacity NUMBER(10):= 5;
    v_room_daily_price FLOAT(10):= 100.0;
    v_room_description NVARCHAR2(200) := 'Описание';
BEGIN
    AddRoom(
        p_room_number => v_room_number,
        p_parent_room_number => v_parent_room_number,
        p_room_name => v_room_name,
        p_room_capacity => v_room_capacity,
        p_room_daily_price => v_room_daily_price,
        p_room_description => v_room_description
    );
END;

--------------------------------------------------------------------------------
SELECT room_number, room_name, LEVEL, PRIOR room_name as parent_room_name
FROM ROOMS
START WITH room_number = 11
CONNECT BY PRIOR room_number = parent_room_number;

--------------------------------------------------------------------------------
--4
--------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE NewParent (
    p_old_parent IN ROOMS.parent_room_number%TYPE,
    p_new_parent IN ROOMS.parent_room_number%TYPE
) AS
BEGIN
UPDATE ROOMS
        SET parent_room_number = p_new_parent
        WHERE room_number IN (
        SELECT room_number FROM (
            SELECT room_number, room_name, parent_room_number
            FROM ROOMS
            START WITH room_number =  p_old_parent
            CONNECT BY PRIOR room_number = parent_room_number
            )
        );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error Code: ' || SQLCODE || ', Error Message: ' || SQLERRM);
        ROLLBACK;
END NewParent;

--------------------------------------------------------------------------------
begin
    NewParent(116,112);
END;
--------------------------------------------------------------------------------
SELECT room_number, room_name, LEVEL, PRIOR room_name as parent_room_name
FROM ROOMS
START WITH room_number = 1
CONNECT BY PRIOR room_number = parent_room_number;
