-- 1
CREATE TABLE Report (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY,
  xml_column XMLType
);
drop table Report;

-- 2.	Создайте процедуру генерации XML
CREATE OR REPLACE function GenerateXMLProcedure return xmlType AS
   v_xml XMLType;
 BEGIN
   SELECT XMLElement("Root",
                 XMLAgg(
                   XMLElement("OrderService",
                     XMLForest(
                        serv.SERVICE_ID AS "serviceID",
                        g.GUEST_NAME AS "guest",
                     )
                   )
                 )
               )
   into v_xml
   FROM SERVICES serv
   JOIN SERVICE_TYPES servT ON servT.SERVICE_TYPE_ID = serv.SERVICE_TYPE_ID
   JOIN GUESTS g ON serv.SERVICE_GUEST_ID = g.GUEST_ID;
   return v_xml;
 END GenerateXMLProcedure;

--3.	Создайте процедуру вставки этого XML в таблицу Report.
CREATE OR REPLACE PROCEDURE InsertInReport AS
  v_xml XMLType;
BEGIN
  v_xml := GenerateXMLProcedure();
  INSERT INTO Report (xml_column) VALUES (v_xml);
  COMMIT;
END InsertInReport;


begin
InsertInReport;
end;
select * from Report;

--4.	Создайте индекс над XML-столбцом в таблице Report.
CREATE INDEX My_XML_Index ON Report(xml_column) INDEXTYPE IS XDB.XMLINDEX;

SELECT XMLQuery('/Root/OrderService/guest/text()' PASSING BY VALUE xml_column RETURNING CONTENT) FROM Report;

--5.	Создайте процедуру извлечения значений элементов и/или атрибутов из XML
CREATE OR REPLACE FUNCTION SelectData(XPath IN VARCHAR2) RETURN XMLType
AS
  v_xml XMLType;
BEGIN
  SELECT XMLQuery(XPath PASSING BY VALUE xml_column RETURNING CONTENT)
  INTO v_xml
  FROM Report;
  RETURN v_xml;
END SelectData;

select SelectData('/Root/OrderService/guest') from dual;

